https://github.com/okovtun/BV_318.git
https://www.youtube.com/playlist?list=PLeqyOOqxeiIPr0w-njMVR2sWVWf6cWlqL

!!!		С сегодняшнего дня все домашние задания отправляются в виде ссылки на GitHub	!!!

TODO:
1. 

DONE:
1. https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/ChessBoard.jpg;
2. https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/HardChess.jpg;
	Эту шахматную доску написать только при помощи двух циклов.
3. Вывести в консоль треугольник Паскаля;
4. Зарегистрироваться на github.com;
5. Используя побитовые операторы поменять местами две переменные, введенные с клавиатуры;

Hardcore:
Построить ряд Фибоначчи при помощи двух переменных.

DONE:
В проете 'FOR' решить следующие задачи:
1. Вычислить факториал числа введенного с клавиатуры.
   Факториал - это произведение ряда чисел от 1 до указанного
   5! = 1*2*3*4*5 = 120;
2. Написать программу, которая возводит указанное число в указанную степень.
   Основание и показатель степени вводятся с клавиатуры.
3. Вывести на экран все ASCII-символы по 16 символов в строке. 
   Символы должны разделяться пробелом.
4. Вывести на экран ряд Фибоначчи до указанного предела.
	Ряд Фибоначчи можно построить из двух чисел: 0 и 1.
	Каждый следующий член ряда - это сумма двух предыдущих членов:
	0	1	1	2	3	5	8	13
5. Вывести на экран заданное количество членов ряда Фибоначчи.
	0	1	1	2	3	5	8	13	21	34	55	89	144	233	377	610	987	1597	2584
6. Вывести на экран ряд простых чисел до предела, введенного с клавиатуры.
	Простым называется число, которое делится только на себя и на 1.
7. Вывести на экран таблицу умножения.
8. Вывести на экран таблицу Пифагора.
9. В Solution 'ControlStructures' добавить проект 'Geometry',
   и в этом проекте вывести в консоль следующие фигуры:
	https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/Geometria1.txt

DONE:
1. В Solution 'ControlStructures' добавить проект 'Ticket' и в нем реализовать следующую программу:
	Пользователь вводит номер автобусного билета, а программа говорит, этот билет счастливый, или обычный;
2. В Solution 'ControlStructures' добавить проект 'Shooter' и в нем реализовать следующую задачу:
	Пользователь нажимает на клавишу, а программа выводит на экран слово, описывающее действие:
		w - вперед
		s - назад
		a - влево
		d - вправо
		Space - прыжок
		Enter - огонь
		Escape - выход

DONE:
Пользователь вводит число с клавиатуры, и программа говорит, является ли это число палиндромом.
Палиндром - это число, которое чистается одинаково в обоих направлениях, напимер:
12321	- палиндром
1221	- палиндром
121		- палиндром
1		- палиндром
123		- НЕ палиндром

DONE:
1. Обеспечить единственное/множественное число при вводе температуры:
	 1 градус;
	 2 градуса;
	 5 градусов;
	15 градусов;
	23 градуса;
	27 градусов;
2. Написать калькулятор, который вычисляет выражения вида:
	2+3
	2+3=5;

DONE:
1. Что будет выведено на экран:
	int i = 0;
	if(i++ && i++)
	{
		cout << i << endl;
	}
2. Что будет выведено на экран:
	int i = 0;
	if(++i && i++)
	{
		cout << i << endl;
	}
3. Что будет выведено на экран:
	int i = 0;
	if(i++ && ++i)
	{
		cout << i << endl;
	}
4. Что будет выведено на экран:
	int i = 0;
	if(i++ || i++)
	{
		cout << i << endl;
	}

DONE:
0. Выучить теорию!!!
	Следующие задачи нужно решить без компилятора:
1. Что будет выведено на экран:
	int i = 0;
	i = ++i + ++i;
	cout << i << endl;
2. Что будет выведено на экран:
	int i = 0;
	i = i++ + ++i;
	cout << i << endl;
3. Что будет выведено на экран:
	int i = 0;
	i = i++ + 1 + ++i * 2;
	cout << i << endl;
4. Что будет выведено на экран:
	int i = 0;
	i = i++ + 1 + ++i *= 2;
	cout << i << endl;
5. Что будет выведено на экран:
	int i = 0;
	i += i++ + 1 + ++i *= 2;
	cout << i << endl;

DONE:
IEEE-754:http://www.softelectro.ru/ieee754.html

DONE:
https://legacy.cplusplus.com/doc/tutorial/constants/

DONE:
1. Выучить теорию по типам данных;
2. Решить все задачи из файла:
	https://github.com/okovtun/BV_318/blob/master/DataTypes/VariablesTask.pdf

DONE:
1. Выучить теорию;
2. Вывести в консоль стишок "В лесу родилась Ёлочка".
   стишок должен быть выровнен по середине окна консоли,
   и его куплеты должны быть разделены пустой строкой.
   В качестве отчета прислать исходный файл программы 
   'main.cpp' или 'Source.cpp';